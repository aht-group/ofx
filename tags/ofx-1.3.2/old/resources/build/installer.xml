<?xml version="1.0" encoding="ISO-8859-1" ?>

	<!-- ********************************************************************
		$Id: openFuXML-Release.xml,v 1.58 2007/10/29 11:39:44 hemmer Exp $
		********************************************************************
		*******************************************************************************
		| openFuXML open source                                                       |
		*******************************************************************************
		| Copyright (c) 2002-2006 openFuXML open source, University of Hagen          |
		|                                                                             |
		| This program is free software; you can redistribute it and/or               |
		| modify it under the terms of the GNU General Public License                 |
		| as published by the Free Software Foundation; either version 2              |
		| of the License, or (at your option) any later version.                      |
		|                                                                             |
		| This program is distributed in the hope that it will be useful,             |
		| but WITHOUT ANY WARRANTY; without even the implied warranty of              |
		| MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the               |
		| GNU General Public License for more details.                                |
		|                                                                             |
		| You should have received a copy of the GNU General Public License           |
		| along with this program; if not, write to the Free Software                 |
		| Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA. |
		*******************************************************************************
		******************************************************************** -->

<project name="openFuXML Installer" default="" basedir="./" >
	
	<!-- Directory Definitions -->
	<property name="trunk.dir" location="${basedir}/trunk" />
	<property name="rsrc.dir" location="${trunk.dir}/resources" />
	<property name="build.dir" location="${trunk.dir}/build" />
	<property name="lib.dir" location="${trunk.dir}/lib" />
	<property name="dist.dir" location="${trunk.dir}/dist" />
	<property name="svnkit.dir" location="${lib.dir}/svnkit" />
	
	
	
    <target name="00 - TaskDef" description="Task definition">
    	
    <!-- 	<taskdef name="install" classname="org.apache.maven.artifact.ant.InstallTask">
    		<classpath>
    			<fileset dir="${lib.dir}">
    				<include name="*.jar"/>
    			</fileset>
    		</classpath>
    	</taskdef>
     -->	
    	<path id= "svnant.classpath"  >
		     <fileset dir= "${svnkit.dir}" >
		         <include name= "*.jar" />
		     </fileset>
		</path>
		<typedef resource="org/tigris/subversion/svnant/svnantlib.xml" classpathref="svnant.classpath" /> 
    	    	
    	<taskdef name="izpack" classpath="${lib.dir}/izpack-standalone-compiler-4.2.1.jar" classname="com.izforge.izpack.ant.IzPackTask"/>
    	
    </target>
	
	<!-- target clean -->	
    <target name="01 - clean" description="Removes build artifacts">
        <delete dir="${build.dir}"/>
        <delete dir="${dist.dir}"/>
    </target>


	
	<target name="Create installable Distribution" depends="00 - TaskDef,01 - clean,mvn-init" xmlns:artifact="urn:maven-artifact-ant">
		<!-- Run the Maven Builds for server and clients to create a zipped distribution-->
		<artifact:mvn pom="${trunk.dir}/pom.xml">
			<arg value="clean"/>
			<arg value="install"/>
			<arg value="assembly:assembly"/>
		</artifact:mvn><unzip src="${trunk.dir}/target/ofx-1.5-openFuXML.zip"
			dest="${build.dir}/server">
			<patternset>
				<include name="**/*"/>
			</patternset>
		</unzip><mkdir dir="${dist.dir}/installer"/>
		<izpack input="${build.dir}/server/ofx-1.5/install.xml" output="${dist.dir}/installer/server.jar" basedir="${build.dir}/server/ofx-1.5"/>
		
	 
		<artifact:mvn pom="${rsrc.dir}/build/maven/client-mac/pom.xml">
			<arg value="clean"/>
			<arg value="install"/>
			<arg value="assembly:assembly"/>
		</artifact:mvn>
		<artifact:mvn pom="${rsrc.dir}/build/maven/client-win/pom.xml">
			<arg value="clean"/>
			<arg value="install"/>
			<arg value="assembly:assembly"/>
		</artifact:mvn>
		<artifact:mvn pom="${rsrc.dir}/build/maven/client-linux/pom.xml">
			<arg value="clean"/>
			<arg value="install"/>
			<arg value="assembly:assembly"/>
		</artifact:mvn>
		
		<!-- Unzip the maven build zip distributions to a build directory -->
		<unzip src="${rsrc.dir}/build/maven/client-mac/target/ofx-client-1.5-openFuXML.zip"
			dest="${build.dir}/client-mac">
			<patternset>
				<include name="**/*"/>
			</patternset>
		</unzip>
		<unzip src="${rsrc.dir}/build/maven/client-win/target/ofx-client-1.5-openFuXML.zip"
			dest="${build.dir}/client-win">
			<patternset>
				<include name="**/*"/>
			</patternset>
		</unzip>
		<unzip src="${rsrc.dir}/build/maven/client-linux/target/ofx-client-1.5-openFuXML.zip"
			dest="${build.dir}/client-linux">
			<patternset>
				<include name="**/*"/>
			</patternset>
		</unzip>
		
		<!-- Remove all maven created target directories-->
		<delete dir="${trunk.dir}/target"/>
		<delete dir="${rsrc.dir}/build/maven/client-mac/target"/>
		<delete dir="${rsrc.dir}/build/maven/client-win/target"/>
		<delete dir="${rsrc.dir}/build/maven/client-linux/target"/>
		
		<!-- Use the izpack software to create the installer files -->
		<izpack input="${build.dir}/client-mac/ofx-client-1.5/installClient.xml" output="${dist.dir}/installer/client-mac.jar" basedir="${build.dir}/client-mac/ofx-client-1.5"/>
		<izpack input="${build.dir}/client-win/ofx-client-1.5/installClient.xml" output="${dist.dir}/installer/client-win.jar" basedir="${build.dir}/client-win/ofx-client-1.5"/>
		<izpack input="${build.dir}/client-linux/ofx-client-1.5/installClient.xml" output="${dist.dir}/installer/client-linux.jar" basedir="${build.dir}/client-linux/ofx-client-1.5"/>

		
		
		
	</target>
	<property name="maven.repository"     value="http://cropwiki.irri.org/m2repo/"/>
	<property name="maven.repository.scp" value="scp://cropwiki.irri.org/home/m2repo/"/>
	<property name="maven.auth.username"  value="${user.home}"/>
	<property name="maven.auth.privkey"   value="${user.home}/.ssh/id_rsa"/>
	
	<!-- what Maven-Ant library is needed -->
	<property name="maven.ant.file" value="maven-artifact-ant-2.0.4-dep.jar"/>
	<target name="mvn-init" unless="compile.classpath"  xmlns:artifact="urn:maven-artifact-ant">
			    <typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="urn:maven-artifact-ant"
			    	classpath="${lib.dir}/maven-ant-tasks-2.1.0.jar"/>
		    <condition property="maven.repo.local" value="${maven.repo.local}" else="${user.home}/.m2/repository">
				        <isset property="maven.repo.local"/>
				    </condition>
		   <echo>maven.repo.local=${maven.repo.local}</echo>
		     <artifact:localRepository id="local.repository" path="${maven.repo.local}"/>
		   <artifact:pom file="${trunk.dir}/pom.xml" id="maven.project" settingsFile="maven/settings.xml"/>
			    <artifact:dependencies pathId="compile.classpath" filesetId="compile.fileset" useScope="compile">
				        <pom refid="maven.project"/>
				        <localRepository refid="local.repository"/>
				    </artifact:dependencies>
	    <artifact:dependencies pathId="test.classpath" filesetId="test.fileset" useScope="test">
		        <pom refid="maven.project"/>
			       <localRepository refid="local.repository"/>
				    </artifact:dependencies>
		    <artifact:dependencies pathId="runtime.classpath" filesetId="runtime.fileset" useScope="runtime">
			        <pom refid="maven.project"/>
			        <localRepository refid="local.repository"/>
		    </artifact:dependencies>
		 
		</target>
		
		<target name="prepare" description="Get Maven, SVN and izPack ready to be used.">
			<delete dir="${trunk.dir}"/>
			<mkdir dir="${basedir}"/>
			<mkdir dir="${lib.dir}"/>
			<mkdir dir="${build.dir}"/>
			<mkdir dir="${dist.dir}"/>
			
			<get
			    src="http://www.apache.org/dist/maven/binaries/maven-ant-tasks-2.1.0.jar"
			    dest="${lib.dir}/maven-ant-tasks-2.1.0.jar"
			    verbose="true"
			    usetimestamp="true"/>
			
			<get
			    src="http://www.svnkit.com/org.tmatesoft.svn_1.3.2.standalone.zip"
			    dest="${lib.dir}/org.tmatesoft.svn_1.3.2.standalone.zip"
			    verbose="true"
			    usetimestamp="true"/>
			<unzip src="${lib.dir}/org.tmatesoft.svn_1.3.2.standalone.zip"
				dest="${svnkit.dir}">
				<patternset>
					<include name="**/*"/>
				</patternset>
			</unzip>
			
			
			<get
			    src="http://mirrors.ibiblio.org/pub/mirrors/maven2/org/codehaus/izpack/izpack-standalone-compiler/4.2.1/izpack-standalone-compiler-4.2.1.jar"
			    dest="${lib.dir}/izpack-standalone-compiler-4.2.1.jar"
			    verbose="true"
			    usetimestamp="true"/>
		</target>
		
		  <target name="svnCheckout">
		    <property name="source-root" value="./"/>
		    <property name="repository.URL" value="https://openfuxml.svn.sourceforge.net/svnroot/openfuxml"/>
		    <java classname="org.tmatesoft.svn.cli.SVN"
		       dir="${basedir}" fork="true">
		      <arg value="co"/>
		      <arg value="${repository.URL}/trunk"/>
		      <classpath>
		        <pathelement location="${svnkit.dir}/svnkit-1.3.2.6267/svnkit.jar" />
		        <pathelement location="${svnkit.dir}/svnkit-1.3.2.6267/svnkit-cli.jar" />
		      </classpath>
		    </java>
  </target>
		
		
	
</project>